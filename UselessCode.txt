// Path rect collision method
sf::FloatRect pathRect;

// vertical
pathRect = selfRect;
// bottom
if(velocity.y > 0){
    pathRect.top -= velocity.y;
    pathRect.height += velocity.y;
    if(pathRect.intersects(obstacleRect)){
        setRelativePos(selfRect.left, obstacleRect.top - selfRect.height);
        collisionVerticalDir = bottom;
        velocity.y = 0;
        return;
    }
} 
// top
else if (velocity.y < 0) {
    pathRect.height -= velocity.y;
    if(pathRect.intersects(obstacleRect)){
        setRelativePos(selfRect.left, obstacleRect.top + obstacleRect.height);
        collisionVerticalDir = top;
        velocity.y = 0;
        return;
    }
}

// horizontal
pathRect = selfRect;
// right
if(velocity.x > 0){
    pathRect.left -= velocity.x;
    pathRect.width += velocity.x;
    if(pathRect.intersects(obstacleRect)){
        setRelativePos(obstacleRect.left-selfRect.width, selfRect.top);
        collisionHorizontalDir = right;
        velocity.x = 0;
        return;
    }
} 
// left
else if (velocity.x < 0) {
    pathRect.width -= velocity.x;
    if(pathRect.intersects(obstacleRect)){
        setRelativePos(obstacleRect.left + obstacleRect.width, selfRect.top);
        collisionHorizontalDir = left;
        velocity.x = 0;
        return;
    }
}

return;